@page "/Movies"
@inject IRepository _repository



<MudCarousel Class="mud-width-full" Style="height:450px; width:1270px;"
             ShowArrows="@arrows" ShowBullets="@bullets"
             EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle"
             TData="Movies">
    @foreach (var group in Movies.Chunk(4))
    {
        <MudCarouselItem Class="d-flex flex-wrap">
            @foreach (var movies in group)
            {
                <MudCard Elevation="0" Outlined="true" Style="width:300px; height:420px; margin-left:10px;">
                    <MudCardMedia Image="@movies.Cover.ToString()" Style="width:270px; height:380px; margin-top:10px; margin-left:10px;" />
                    <MudText Typo="Typo.subtitle2" Align="Align.Center">@movies.Title</MudText>
                </MudCard>
            }
        </MudCarouselItem>
    }
</MudCarousel>

<MudTable Items="@Movies" Virtualize="true">
    <RowTemplate>
        @foreach (var group in Movies.Chunk(4))
        {
            <MudCard Elevation="0" Outlined="true" Style="width:300px; height:180px; margin-left:10px;">
                <MudCardContent>
                    <div class="d-flex align-items-center">
                        @foreach (var movie in group)
                        {
                            <div class="d-flex align-items-center me-5">
                                <img src="@movie.Cover" width="150" height="150" alt="Descripción de la imagen" />

                                <div class="d-flex flex-column">
                                    <h3 class="mb-0">Title: @movie.Title</h3>
                                    <p class="mb-2">Description: @movie.Description</p>
                                    <p class="mb-0">Classification: @movie?.IdClassificationNavigation?.Name</p>
                                    <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Update" Color="Color.Primary" Href="@($"UpdateMovie/{movie.IdMovie}")" ButtonType="ButtonType.Submit">Edit</MudButton>
                                </div>
                            </div>
                        }
                    </div>
                </MudCardContent>
            </MudCard>
        }
    </RowTemplate>
</MudTable>




@code {
    private List<Movies> Movies { get; set; }
    private bool arrows = true;
    private bool bullets = false;
    private bool enableSwipeGesture = true;
    private bool autocycle = true;
    private Transition transition = Transition.Slide;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await _repository.Get<List<Movies>>("api/Movies");
            if (response.Error)
            {
                Console.WriteLine(response.GetBody());
            }
            else if (response.Response != null)
            {
                Movies = response.Response;
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            // Manejar el error de alguna manera, por ejemplo, mostrar un mensaje de error en la página
        }
    }
}
